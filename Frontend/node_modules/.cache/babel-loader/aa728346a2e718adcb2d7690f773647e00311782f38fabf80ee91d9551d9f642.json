{"ast":null,"code":"export default {\n  data() {\n    return {\n      cartItems: [],\n      showModal: false,\n      firstName: '',\n      lastName: '',\n      email: '',\n      deliveryAddress: ''\n    };\n  },\n  computed: {\n    totalAmount() {\n      return this.cartItems.reduce((total, item) => total + item.menuItem.price * item.quantity, 0);\n    }\n  },\n  mounted() {\n    this.loadCartItems();\n  },\n  methods: {\n    loadCartItems() {\n      this.cartItems = JSON.parse(localStorage.getItem('cart') || '[]');\n    },\n    decreaseQuantity(index) {\n      if (this.cartItems[index].quantity > 1) {\n        this.cartItems[index].quantity--;\n        this.updateCart();\n      }\n    },\n    increaseQuantity(index) {\n      this.cartItems[index].quantity++;\n      this.updateCart();\n    },\n    removeItem(index) {\n      this.cartItems.splice(index, 1);\n      this.updateCart();\n    },\n    updateCart() {\n      localStorage.setItem('cart', JSON.stringify(this.cartItems));\n    },\n    openModal() {\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async placeOrder() {\n      try {\n        const response = await fetch('http://localhost:3000/api/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            deliveryAddress: this.deliveryAddress,\n            cartItems: this.cartItems\n          })\n        });\n        if (response.ok) {\n          // Clear the cart\n          this.cartItems = [];\n          localStorage.removeItem('cart');\n          // Close the modal\n          this.closeModal();\n          // Show success message or redirect to a success page\n          alert('Order placed successfully!');\n        } else {\n          throw new Error('Error placing order');\n        }\n      } catch (error) {\n        console.error('Error placing order:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cartItems","showModal","firstName","lastName","email","deliveryAddress","computed","totalAmount","reduce","total","item","menuItem","price","quantity","mounted","loadCartItems","methods","JSON","parse","localStorage","getItem","decreaseQuantity","index","updateCart","increaseQuantity","removeItem","splice","setItem","stringify","openModal","closeModal","placeOrder","response","fetch","method","headers","body","ok","alert","Error","error","console"],"sources":["/Users/thinhdang/Desktop/Relaxing-koala/Frontend/src/views/CartView.vue"],"sourcesContent":["<template>\n    <div class=\"cart-container\">\n      <h2>Shopping Cart</h2>\n      <div v-if=\"cartItems.length === 0\">\n        <p>Your cart is empty.</p>\n      </div>\n      <div v-else>\n        <div v-for=\"(item, index) in cartItems\" :key=\"item.menuItem._id\" class=\"cart-item\">\n          <div class=\"item-details\">\n            <h4>{{ item.menuItem.name }}</h4>\n            <p>Price: ${{ item.menuItem.price.toFixed(2) }}</p>\n            <div class=\"quantity-control\">\n              <button @click=\"decreaseQuantity(index)\">-</button>\n              <span>{{ item.quantity }}</span>\n              <button @click=\"increaseQuantity(index)\">+</button>\n            </div>\n            <button @click=\"removeItem(index)\">Remove</button>\n          </div>\n        </div>\n        <div class=\"total-amount\">\n          <h4>Total Amount: ${{ totalAmount.toFixed(2) }}</h4>\n        </div>\n        <button @click=\"openModal\">Place Order</button>\n      </div>\n      <!-- Modal -->\n      <div v-if=\"showModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h3>Enter Your Information</h3>\n          <form @submit.prevent=\"placeOrder\">\n            <div>\n              <label for=\"firstName\">First Name:</label>\n              <input type=\"text\" id=\"firstName\" v-model=\"firstName\" required>\n            </div>\n            <div>\n              <label for=\"lastName\">Last Name:</label>\n              <input type=\"text\" id=\"lastName\" v-model=\"lastName\" required>\n            </div>\n            <div>\n              <label for=\"email\">Email:</label>\n              <input type=\"email\" id=\"email\" v-model=\"email\" required>\n            </div>\n            <div>\n              <label for=\"deliveryAddress\">Delivery Address:</label>\n              <textarea id=\"deliveryAddress\" v-model=\"deliveryAddress\" required></textarea>\n            </div>\n            <button type=\"submit\">Place Order</button>\n            <button type=\"button\" @click=\"closeModal\">Cancel</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        cartItems: [],\n        showModal: false,\n        firstName: '',\n        lastName: '',\n        email: '',\n        deliveryAddress: '',\n      };\n    },\n    computed: {\n      totalAmount() {\n        return this.cartItems.reduce((total, item) => total + item.menuItem.price * item.quantity, 0);\n      },\n    },\n    mounted() {\n      this.loadCartItems();\n    },\n    methods: {\n      loadCartItems() {\n        this.cartItems = JSON.parse(localStorage.getItem('cart') || '[]');\n      },\n      decreaseQuantity(index) {\n        if (this.cartItems[index].quantity > 1) {\n          this.cartItems[index].quantity--;\n          this.updateCart();\n        }\n      },\n      increaseQuantity(index) {\n        this.cartItems[index].quantity++;\n        this.updateCart();\n      },\n      removeItem(index) {\n        this.cartItems.splice(index, 1);\n        this.updateCart();\n      },\n      updateCart() {\n        localStorage.setItem('cart', JSON.stringify(this.cartItems));\n      },\n      openModal() {\n        this.showModal = true;\n      },\n      closeModal() {\n        this.showModal = false;\n      },\n      async placeOrder() {\n        try {\n          const response = await fetch('http://localhost:3000/api/orders', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              firstName: this.firstName,\n              lastName: this.lastName,\n              email: this.email,\n              deliveryAddress: this.deliveryAddress,\n              cartItems: this.cartItems,\n            }),\n          });\n          if (response.ok) {\n            // Clear the cart\n            this.cartItems = [];\n            localStorage.removeItem('cart');\n            // Close the modal\n            this.closeModal();\n            // Show success message or redirect to a success page\n            alert('Order placed successfully!');\n          } else {\n            throw new Error('Error placing order');\n          }\n        } catch (error) {\n          console.error('Error placing order:', error);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .cart-container {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  .cart-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    padding: 10px;\n    border: 1px solid #ccc;\n  }\n  .item-details {\n    flex-grow: 1;\n  }\n  .quantity-control {\n    display: flex;\n    align-items: center;\n  }\n  .quantity-control button {\n    margin: 0 5px;\n  }\n  .total-amount {\n    margin-top: 20px;\n    text-align: right;\n  }\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .modal-content {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n  }\n  .modal-content form {\n    display: flex;\n    flex-direction: column;\n  }\n  .modal-content form div {\n    margin-bottom: 10px;\n  }\n  .modal-content form label {\n    font-weight: bold;\n  }\n  .modal-content form input,\n  .modal-content form textarea {\n    width: 100%;\n    padding: 5px;\n  }\n  .modal-content form button {\n    margin-top: 10px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}