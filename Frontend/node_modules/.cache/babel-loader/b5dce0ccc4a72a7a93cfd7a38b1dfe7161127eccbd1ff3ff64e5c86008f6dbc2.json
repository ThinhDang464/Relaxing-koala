{"ast":null,"code":"export default {\n  data() {\n    return {\n      reservation: {\n        date: '',\n        time: '',\n        numberOfPeople: '',\n        specialComments: ''\n      },\n      user: {\n        firstName: '',\n        lastName: '',\n        email: ''\n      },\n      showEditReservationModal: false,\n      showDeleteReservationModal: false,\n      editEmail: '',\n      deleteEmail: ''\n    };\n  },\n  methods: {\n    async submitReservation() {\n      // Existing submitReservation method\n    },\n    resetForm() {\n      // Existing resetForm method\n    },\n    showEditModal() {\n      this.showEditReservationModal = true;\n    },\n    showDeleteModal() {\n      this.showDeleteReservationModal = true;\n    },\n    async editReservation() {\n      try {\n        const response = await fetch(`http://localhost:3000/api/reservations?email=${this.editEmail}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.length > 0) {\n            // Populate the form fields with the retrieved reservation data\n            this.reservation = data[0].reservations[0];\n          } else {\n            alert('No reservation found for the provided email.');\n          }\n        } else {\n          throw new Error('Error fetching reservation');\n        }\n      } catch (error) {\n        console.error('Error fetching reservation:', error);\n      } finally {\n        this.showEditReservationModal = false;\n        this.editEmail = '';\n      }\n    },\n    async deleteReservation() {\n      try {\n        const response = await fetch(`http://localhost:3000/api/reservations?email=${this.deleteEmail}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          alert('Reservation deleted successfully!');\n          this.resetForm();\n        } else {\n          throw new Error('Error deleting reservation');\n        }\n      } catch (error) {\n        console.error('Error deleting reservation:', error);\n      } finally {\n        this.showDeleteReservationModal = false;\n        this.deleteEmail = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","reservation","date","time","numberOfPeople","specialComments","user","firstName","lastName","email","showEditReservationModal","showDeleteReservationModal","editEmail","deleteEmail","methods","submitReservation","resetForm","showEditModal","showDeleteModal","editReservation","response","fetch","ok","json","length","reservations","alert","Error","error","console","deleteReservation","method"],"sources":["/Users/thinhdang/Desktop/Relaxing-koala/Frontend/src/views/ReservationView.vue"],"sourcesContent":["<template>\n    <div class=\"reservation-form container mt-5\">\n      <h2 class=\"text-center mb-4\">Book a Reservation</h2>\n      <form @submit.prevent=\"submitReservation\" class=\"form-group\">\n        <!-- Existing form fields -->\n        <div class=\"d-flex justify-content-between\">\n          <button type=\"submit\" class=\"btn btn-success\">Create Reservation</button>\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"showEditModal\">Edit Reservation</button>\n          <button type=\"button\" class=\"btn btn-danger\" @click=\"showDeleteModal\">Delete Reservation</button>\n        </div>\n      </form>\n  \n      <!-- Edit Reservation Modal -->\n      <b-modal v-model=\"showEditReservationModal\" title=\"Edit Reservation\" @ok=\"editReservation\">\n        <div class=\"mb-3\">\n          <label for=\"editEmail\" class=\"form-label\">Email:</label>\n          <input type=\"email\" id=\"editEmail\" v-model=\"editEmail\" class=\"form-control\" required>\n        </div>\n      </b-modal>\n  \n      <!-- Delete Reservation Modal -->\n      <b-modal v-model=\"showDeleteReservationModal\" title=\"Delete Reservation\" @ok=\"deleteReservation\">\n        <div class=\"mb-3\">\n          <label for=\"deleteEmail\" class=\"form-label\">Email:</label>\n          <input type=\"email\" id=\"deleteEmail\" v-model=\"deleteEmail\" class=\"form-control\" required>\n        </div>\n      </b-modal>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        reservation: {\n          date: '',\n          time: '',\n          numberOfPeople: '',\n          specialComments: '',\n        },\n        user: {\n          firstName: '',\n          lastName: '',\n          email: '',\n        },\n        showEditReservationModal: false,\n        showDeleteReservationModal: false,\n        editEmail: '',\n        deleteEmail: '',\n      };\n    },\n    methods: {\n      async submitReservation() {\n        // Existing submitReservation method\n      },\n      resetForm() {\n        // Existing resetForm method\n      },\n      showEditModal() {\n        this.showEditReservationModal = true;\n      },\n      showDeleteModal() {\n        this.showDeleteReservationModal = true;\n      },\n      async editReservation() {\n        try {\n          const response = await fetch(`http://localhost:3000/api/reservations?email=${this.editEmail}`);\n          if (response.ok) {\n            const data = await response.json();\n            if (data.length > 0) {\n              // Populate the form fields with the retrieved reservation data\n              this.reservation = data[0].reservations[0];\n            } else {\n              alert('No reservation found for the provided email.');\n            }\n          } else {\n            throw new Error('Error fetching reservation');\n          }\n        } catch (error) {\n          console.error('Error fetching reservation:', error);\n        } finally {\n          this.showEditReservationModal = false;\n          this.editEmail = '';\n        }\n      },\n      async deleteReservation() {\n        try {\n          const response = await fetch(`http://localhost:3000/api/reservations?email=${this.deleteEmail}`, {\n            method: 'DELETE',\n          });\n          if (response.ok) {\n            alert('Reservation deleted successfully!');\n            this.resetForm();\n          } else {\n            throw new Error('Error deleting reservation');\n          }\n        } catch (error) {\n          console.error('Error deleting reservation:', error);\n        } finally {\n          this.showDeleteReservationModal = false;\n          this.deleteEmail = '';\n        }\n      },\n    },\n  };\n  </script>\n  "],"mappings":"AA+BE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,cAAc,EAAE,EAAE;QAClBC,eAAe,EAAE;MACnB,CAAC;MACDC,IAAI,EAAE;QACJC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,wBAAwB,EAAE,KAAK;MAC/BC,0BAA0B,EAAE,KAAK;MACjCC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB;IAAA,CACD;IACDC,SAASA,CAAA,EAAG;MACV;IAAA,CACD;IACDC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACP,wBAAuB,GAAI,IAAI;IACtC,CAAC;IACDQ,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACP,0BAAyB,GAAI,IAAI;IACxC,CAAC;IACD,MAAMQ,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAE,gDAA+C,IAAI,CAACT,SAAU,EAAC,CAAC;QAC9F,IAAIQ,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMtB,IAAG,GAAI,MAAMoB,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClC,IAAIvB,IAAI,CAACwB,MAAK,GAAI,CAAC,EAAE;YACnB;YACA,IAAI,CAACvB,WAAU,GAAID,IAAI,CAAC,CAAC,CAAC,CAACyB,YAAY,CAAC,CAAC,CAAC;UAC5C,OAAO;YACLC,KAAK,CAAC,8CAA8C,CAAC;UACvD;QACF,OAAO;UACL,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,UAAU;QACR,IAAI,CAAClB,wBAAuB,GAAI,KAAK;QACrC,IAAI,CAACE,SAAQ,GAAI,EAAE;MACrB;IACF,CAAC;IACD,MAAMkB,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMC,KAAK,CAAE,gDAA+C,IAAI,CAACR,WAAY,EAAC,EAAE;UAC/FkB,MAAM,EAAE;QACV,CAAC,CAAC;QACF,IAAIX,QAAQ,CAACE,EAAE,EAAE;UACfI,KAAK,CAAC,mCAAmC,CAAC;UAC1C,IAAI,CAACV,SAAS,CAAC,CAAC;QAClB,OAAO;UACL,MAAM,IAAIW,KAAK,CAAC,4BAA4B,CAAC;QAC/C;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,UAAU;QACR,IAAI,CAACjB,0BAAyB,GAAI,KAAK;QACvC,IAAI,CAACE,WAAU,GAAI,EAAE;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}